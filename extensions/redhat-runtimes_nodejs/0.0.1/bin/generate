#!/usr/bin/env bash
set -eo pipefail

# INPUT ARGUMENTS
platform_dir=$CNB_PLATFORM_DIR
output_dir=$CNB_OUTPUT_DIR
plan_path=$CNB_BP_PLAN_PATH
env_dir=${platform_dir}/env

# Patched by build.sh with correct values
CNB_USER_ID=
CNB_GROUP_ID=

# TODO .. read engines from package.json to selec
#         appropriate rpm
#         for PoC purposes a single nodejs version will do.
#         currently hard coded to 16
#
PACKAGES="make gcc gcc-c++ libatomic_ops git openssl-devel nodejs npm nodejs-nodemon nss_wrapper which"
NODEJS_VERSION=16

# Create Dockerfile
cat << EOF > ${output_dir}/build.Dockerfile
ARG base_image
FROM \${base_image}
USER root
ARG build_id=0
RUN echo \${build_id}
RUN microdnf -y module enable nodejs:${NODEJS_VERSION}
RUN microdnf --setopt=install_weak_deps=0 --setopt=tsflags=nodocs install -y ${PACKAGES} && microdnf clean all
USER ${CNB_USER_ID}:${CNB_GROUP_ID}
RUN npm install  yarn
EOF


# Patched by build.sh with correct image name
cat <<EOF > ${output_dir}/run.Dockerfile
FROM localhost:5000/run-nodejs:testozzy1
EOF


echo "Output of build and run Dockerfiles complete"
ls -al $output_dir

exit 0
