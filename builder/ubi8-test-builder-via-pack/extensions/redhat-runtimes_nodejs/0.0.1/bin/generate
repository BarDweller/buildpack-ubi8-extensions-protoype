#!/usr/bin/env bash
set -eo pipefail

# INPUT ARGUMENTS
platform_dir=$2
env_dir=${platform_dir}/env
output_dir=$1
plan_path=$3

# Patched by build.sh with correct values
CNB_USER_ID=1000
CNB_GROUP_ID=1000

echo '****************************'
echo 'extension build env vars!!'
echo "CNB_PLATFORM_API: $CNB_PLATFORM_API"
echo "CNB_STACK_ID: $CNB_STACK_ID"
echo "CNB_USER_ID: $CNB_USER_ID"
echo "CNB_GROUP_ID: $CNB_GROUP_ID"
echo '****************************'
echo 'extension plan...'
cat $3
echo '****************************'


# TODO .. read engines from package.json to selec
#         appropriate rpm
#         for PoC purposes a single nodejs version will do.
#         currently hard coded to 16
#
PACKAGES="make gcc gcc-c++ libatomic_ops git openssl-devel nodejs npm nodejs-nodemon nss_wrapper which"
NODEJS_VERSION=16

# Create Dockerfile
cat << EOF > ${output_dir}/build.Dockerfile
ARG base_image
FROM \${base_image}

USER root

ARG build_id=0
RUN echo \${build_id}

RUN microdnf -y module enable nodejs:${NODEJS_VERSION}
RUN microdnf --setopt=install_weak_deps=0 --setopt=tsflags=nodocs install -y ${PACKAGES} && microdnf clean all

RUN echo uid:gid "${CNB_USER_ID}:${CNB_GROUP_ID}"
USER ${CNB_USER_ID}:${CNB_GROUP_ID}

RUN echo "CNB_STACK_ID: ${CNB_STACK_ID}"

EOF


# Patched by build.sh with correct image name
cat <<EOF > ${output_dir}/run.Dockerfile
FROM localhost:5000/run-nodejs:packbuilderoz5
EOF


echo "Output of build and run Dockerfiles complete"
ls -al $output_dir

