#!/usr/bin/env bash
set -eo pipefail

# INPUT ARGUMENTS
platform_dir=$2
env_dir=${platform_dir}/env
output_dir=$1
plan_path=$3

echo '****************************'
echo 'extension build env vars!!'
echo "CNB_PLATFORM_API: $CNB_PLATFORM_API"
echo "CNB_STACK_ID: $CNB_STACK_ID"
echo "CNB_USER_ID: $CNB_USER_ID"
echo "CNB_GROUP_ID: $CNB_GROUP_ID"
echo '****************************'

# TODO .. read BP_JVM_VERSION to select appropriate rpm
#         for PoC purposes a single jre/jdk will do.
#
# mvnw needs which
PACKAGES="java-11-openjdk java-11-openjdk-devel which"

# other stuff.. 
# read BP_JVM_* and do appropriate things.
# read JAVA_TOOL_OPTIONS and do appropriate things.
# see https://github.com/paketo-buildpacks/bellsoft-liberica for flags.

# Create Dockerfile
cat << EOF > ${output_dir}/build.Dockerfile
ARG base_image
FROM \${base_image}

USER root

ARG build_id=0
RUN echo \${build_id}

RUN microdnf --setopt=install_weak_deps=0 --setopt=tsflags=nodocs install -y ${PACKAGES} && microdnf clean all
RUN echo "CNB_STACK_ID: ${CNB_STACK_ID}"

EOF

cat <<EOF > ${output_dir}/run.Dockerfile
FROM localhost:5000/run-java:rundebug8
EOF


echo "Output of build and run Dockerfiles complete"
ls -al $output_dir

